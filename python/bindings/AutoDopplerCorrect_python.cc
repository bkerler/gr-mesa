/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(AutoDopplerCorrect.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(e67c3da6e40321ef09a6742aed170b21)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <mesa/AutoDopplerCorrect.h>
// pydoc.h is automatically generated in the build directory
#include <AutoDopplerCorrect_pydoc.h>

void bind_AutoDopplerCorrect(py::module& m)
{

    using AutoDopplerCorrect    = ::gr::mesa::AutoDopplerCorrect;


    py::class_<AutoDopplerCorrect, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<AutoDopplerCorrect>>(m, "AutoDopplerCorrect", D(AutoDopplerCorrect))

        .def(py::init(&AutoDopplerCorrect::make),
           py::arg("freq"),
           py::arg("sampleRate"),
           py::arg("maxDrift"),
           py::arg("minWidth"),
           py::arg("expectedWidth"),
           py::arg("shiftHolddownMS"),
           py::arg("fft_size"),
           py::arg("squelchThreshold"),
           py::arg("framesToAvg"),
           py::arg("holdUpSec"),
           py::arg("processMessages"),
           py::arg("detectionMethod"),
           D(AutoDopplerCorrect,make)
        )
        




        
        .def("getSquelch",&AutoDopplerCorrect::getSquelch,       
            D(AutoDopplerCorrect,getSquelch)
        )


        
        .def("setSquelch",&AutoDopplerCorrect::setSquelch,       
            py::arg("newValue"),
            D(AutoDopplerCorrect,setSquelch)
        )


        
        .def("getCenterFrequency",&AutoDopplerCorrect::getCenterFrequency,       
            D(AutoDopplerCorrect,getCenterFrequency)
        )


        
        .def("setCenterFrequency",&AutoDopplerCorrect::setCenterFrequency,       
            py::arg("newValue"),
            D(AutoDopplerCorrect,setCenterFrequency)
        )


        
        .def("getMinWidthHz",&AutoDopplerCorrect::getMinWidthHz,       
            D(AutoDopplerCorrect,getMinWidthHz)
        )


        
        .def("setMinWidthHz",&AutoDopplerCorrect::setMinWidthHz,       
            py::arg("newValue"),
            D(AutoDopplerCorrect,setMinWidthHz)
        )


        
        .def("getExpectedWidth",&AutoDopplerCorrect::getExpectedWidth,       
            D(AutoDopplerCorrect,getExpectedWidth)
        )


        
        .def("setExpectedWidth",&AutoDopplerCorrect::setExpectedWidth,       
            py::arg("newValue"),
            D(AutoDopplerCorrect,setExpectedWidth)
        )


        
        .def("getMaxDrift",&AutoDopplerCorrect::getMaxDrift,       
            D(AutoDopplerCorrect,getMaxDrift)
        )


        
        .def("setMaxDrift",&AutoDopplerCorrect::setMaxDrift,       
            py::arg("newValue"),
            D(AutoDopplerCorrect,setMaxDrift)
        )

        ;




}








