/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(ioselector.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(88a896322737bf0a21bf316fa6f8565e)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <mesa/ioselector.h>
// pydoc.h is automatically generated in the build directory
#include <ioselector_pydoc.h>

void bind_ioselector(py::module& m)
{

    using ioselector    = ::gr::mesa::ioselector;


    py::class_<ioselector, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<ioselector>>(m, "ioselector", D(ioselector))

        .def(py::init(&ioselector::make),
           py::arg("numinputs"),
           py::arg("numoutputs"),
           py::arg("inputport"),
           py::arg("outputport"),
           py::arg("itemsize"),
           D(ioselector,make)
        )
        




        
        .def("set_input_index",&ioselector::set_input_index,       
            py::arg("newValue"),
            D(ioselector,set_input_index)
        )


        
        .def("set_output_index",&ioselector::set_output_index,       
            py::arg("newValue"),
            D(ioselector,set_output_index)
        )

        ;




}








